/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.admin;

import Config.UserSession;
import Config.constant;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import views.Login;

/**
 *
 * @author FryenX
 */
public class ManageLevels extends javax.swing.JFrame {

    /**
     * Creates new form ManageLevels
     */
    public ManageLevels() {
        initComponents();
        txtSession.setText(UserSession.getName());
        customizeTable();
        String searchQuery = txtSearch.getText().trim();
        int pageNumber = 0; // Set the current page (0 for the first page)
        fetchLevels(searchQuery, pageNumber);
        Icon();
    }
    private void Icon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/icon.png")));
    }
    private final Connection conn = (Connection) constant.connect();
    private int currentPage = 0;
    private int totalPages = 0;
    private final int pageSize = 10;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelUnits = new javax.swing.JLabel();
        btnAddLevel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableLevels = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        pageButtonsPanel = new javax.swing.JPanel();
        btnNext = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnTransactions = new javax.swing.JLabel();
        btnHome = new javax.swing.JLabel();
        iconHome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnUsers = new javax.swing.JLabel();
        btnCategories = new javax.swing.JLabel();
        btnUnits = new javax.swing.JLabel();
        btnProducts = new javax.swing.JLabel();
        btnLevels = new javax.swing.JLabel();
        iconCategories = new javax.swing.JLabel();
        iconUnits = new javax.swing.JLabel();
        iconProducts = new javax.swing.JLabel();
        iconLevels = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        iconTransactions = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtSession = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelUnits.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        labelUnits.setText("Levels");

        btnAddLevel.setBackground(new java.awt.Color(0, 153, 255));
        btnAddLevel.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnAddLevel.setForeground(new java.awt.Color(255, 255, 255));
        btnAddLevel.setText("Add Data");
        btnAddLevel.setBorder(null);
        btnAddLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLevelActionPerformed(evt);
            }
        });

        tableLevels.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "No", "Info", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableLevels.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tableLevels);
        if (tableLevels.getColumnModel().getColumnCount() > 0) {
            tableLevels.getColumnModel().getColumn(2).setMinWidth(0);
            tableLevels.getColumnModel().getColumn(2).setPreferredWidth(0);
            tableLevels.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel2.setText("Search:");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(51, 204, 0));
        btnEdit.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setText("Edit");
        btnEdit.setBorder(null);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(204, 0, 0));
        btnDelete.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(null);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnPrev.setBackground(new java.awt.Color(102, 102, 102));
        btnPrev.setFont(new java.awt.Font("Poppins Black", 1, 14)); // NOI18N
        btnPrev.setForeground(new java.awt.Color(255, 255, 255));
        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });

        pageButtonsPanel.setAlignmentX(0.0F);
        pageButtonsPanel.setAlignmentY(0.0F);

        javax.swing.GroupLayout pageButtonsPanelLayout = new javax.swing.GroupLayout(pageButtonsPanel);
        pageButtonsPanel.setLayout(pageButtonsPanelLayout);
        pageButtonsPanelLayout.setHorizontalGroup(
            pageButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );
        pageButtonsPanelLayout.setVerticalGroup(
            pageButtonsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 29, Short.MAX_VALUE)
        );

        btnNext.setBackground(new java.awt.Color(102, 102, 102));
        btnNext.setFont(new java.awt.Font("Poppins Black", 1, 14)); // NOI18N
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setText(">>");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        btnTransactions.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnTransactions.setForeground(new java.awt.Color(255, 255, 255));
        btnTransactions.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnTransactions.setText("Transactions");
        btnTransactions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTransactionsMouseClicked(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnHome.setText("Home");
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });

        iconHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/chart-simple-solid.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/users-solid.png"))); // NOI18N

        btnUsers.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnUsers.setForeground(new java.awt.Color(255, 255, 255));
        btnUsers.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnUsers.setText("Users");
        btnUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUsersMouseClicked(evt);
            }
        });

        btnCategories.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnCategories.setForeground(new java.awt.Color(255, 255, 255));
        btnCategories.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCategories.setText("Categories");
        btnCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCategoriesMouseClicked(evt);
            }
        });

        btnUnits.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnUnits.setForeground(new java.awt.Color(255, 255, 255));
        btnUnits.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnUnits.setText("Units");
        btnUnits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUnitsMouseClicked(evt);
            }
        });

        btnProducts.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnProducts.setForeground(new java.awt.Color(255, 255, 255));
        btnProducts.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProducts.setText("Products");
        btnProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProductsMouseClicked(evt);
            }
        });

        btnLevels.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnLevels.setForeground(new java.awt.Color(255, 255, 255));
        btnLevels.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLevels.setText("Levels");
        btnLevels.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLevelsMouseClicked(evt);
            }
        });

        iconCategories.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/list-solid.png"))); // NOI18N

        iconUnits.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/list-solid.png"))); // NOI18N

        iconProducts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/table-solid.png"))); // NOI18N

        iconLevels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/share-solid.png"))); // NOI18N

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        iconTransactions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/table-solid.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setMinimumSize(new java.awt.Dimension(194, 100));

        txtSession.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtSession.setText("NAME");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(txtSession)
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSession)
                .addContainerGap())
        );

        btnLogout.setBackground(new java.awt.Color(255, 0, 0));
        btnLogout.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnLogout.setText("LOGOUT");
        btnLogout.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(iconTransactions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTransactions, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(iconHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHome))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(iconCategories)
                            .addComponent(iconUnits)
                            .addComponent(iconLevels)
                            .addComponent(iconProducts))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCategories)
                            .addComponent(btnUsers)
                            .addComponent(btnUnits)
                            .addComponent(btnProducts)
                            .addComponent(btnLevels))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(iconHome)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUsers)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCategories)
                    .addComponent(iconCategories))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUnits)
                    .addComponent(iconUnits))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnProducts)
                    .addComponent(iconProducts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLevels)
                    .addComponent(iconLevels))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTransactions)
                    .addComponent(iconTransactions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pageButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnAddLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(labelUnits)))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(labelUnits)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnAddLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnNext)
                    .addComponent(pageButtonsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrev))
                .addContainerGap(67, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLevelActionPerformed
        JDialog addLevelDialog = new JDialog(this, "Add New Level", true);
        addLevelDialog.setSize(300, 150);
        addLevelDialog.setLayout(new BorderLayout());

        // Panel for input
        JPanel inputPanel = new JPanel(new FlowLayout(FlowLayout.CENTER)); // Center the input panel content
        JPanel formPanel = new JPanel(new GridLayout(2, 1)); // Nested panel for the form layout

        JLabel lblLevelName = new JLabel("Level Name:");
        JTextField txtLevelName = new JTextField(20); // Set preferred width for the input field

        formPanel.add(lblLevelName);
        formPanel.add(txtLevelName);

        inputPanel.add(formPanel); // Add the form panel to the input panel

        // Panel for buttons
        JPanel buttonPanel = new JPanel(new FlowLayout());
        JButton btnSave = new JButton("Save");
        JButton btnCancel = new JButton("Cancel");
        buttonPanel.add(btnSave);
        buttonPanel.add(btnCancel);

        addLevelDialog.add(inputPanel, BorderLayout.CENTER);
        addLevelDialog.add(buttonPanel, BorderLayout.SOUTH);

        // Handle Save button
        btnSave.addActionListener(e -> {
            String levelName = txtLevelName.getText().trim();
            if (levelName.isEmpty()) {
                JOptionPane.showMessageDialog(addLevelDialog, "Level name cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            try (PreparedStatement ps = conn.prepareStatement("INSERT INTO levels (info) VALUES (?)")) {
                ps.setString(1, levelName);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(addLevelDialog, "Level added successfully!");
                addLevelDialog.dispose(); // Close the dialog

                String searchQuery = txtSearch.getText().trim();
                int pageNumber = 0; // Set the current page (0 for the first page)
                fetchLevels(searchQuery, pageNumber);
                updatePrevNextButtons();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(addLevelDialog, "Error adding level: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        });

        // Handle Cancel button
        btnCancel.addActionListener(e -> addLevelDialog.dispose());

        addLevelDialog.setLocationRelativeTo(this); // Center dialog
        addLevelDialog.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddLevelActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        String searchQuery = txtSearch.getText().trim();  // Get the text from the search field
        int pageNumber = 0; // Set the current page (0 for the first page)
        if (!searchQuery.isEmpty()) {
            fetchLevels(searchQuery, pageNumber);
        } else {
            fetchLevels(searchQuery, pageNumber);
        }// TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        int selectedRow = tableLevels.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tableLevels.getModel();
        if (selectedRow != -1) {
            int id = getSelectedLevelId();  // ID from the hidden column

            String levelName = (String) model.getValueAt(selectedRow, 1);  // Name from the second column

            // Retrieve the current search query
            String searchQuery = txtSearch.getText().trim();  // Get search query from the text field

            editLevel(id, levelName, searchQuery);  // Pass both ID, Name, and search query
        } else {
            JOptionPane.showMessageDialog(this, "Please select a level first.", "No Selection", JOptionPane.WARNING_MESSAGE);
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int id = getSelectedLevelId();
        if (id != -1) {
            String searchQuery = txtSearch.getText().trim();
            deleteLevel(id, searchQuery); // Your edit method
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        if (currentPage > 0) {
            currentPage--;
            fetchLevels(txtSearch.getText().trim(), currentPage);
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        String searchQuery = txtSearch.getText().trim();
        if (currentPage < totalPages - 1) {
            currentPage++;
            fetchLevels(searchQuery, currentPage);
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnTransactionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransactionsMouseClicked
        Transactions transactions = new Transactions(); // Instantiate the Input class
        transactions.setVisible(true);    // Show the Input window
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTransactionsMouseClicked

    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        AdminDashboard adminDashboard = new AdminDashboard(); // Instantiate the Input class
        adminDashboard.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnHomeMouseClicked

    private void btnUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUsersMouseClicked
        ManageUsers manageUser = new ManageUsers(); // Instantiate the Input class
        manageUser.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnUsersMouseClicked

    private void btnCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCategoriesMouseClicked
        ManageCategories manageCategories = new ManageCategories(); // Instantiate the Input class
        manageCategories.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnCategoriesMouseClicked

    private void btnUnitsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUnitsMouseClicked
        ManageUnits manageUnits = new ManageUnits(); // Instantiate the Input class
        manageUnits.setVisible(true);    // Show the Input window
        this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_btnUnitsMouseClicked

    private void btnProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProductsMouseClicked
        ManageProducts manageProducts = new ManageProducts(); // Instantiate the Input class
        manageProducts.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnProductsMouseClicked

    private void btnLevelsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLevelsMouseClicked
        
    }//GEN-LAST:event_btnLevelsMouseClicked

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        UserSession.clearSession();

        Login login = new Login();
        login.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void updatePrevNextButtons() {
        btnPrev.setEnabled(currentPage > 0);
        btnNext.setEnabled(currentPage < totalPages - 1);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageLevels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageLevels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageLevels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageLevels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageLevels().setVisible(true);
            }
        });
    }

    private void fetchLevels(String searchQuery, int pageNumber) {
        int offset = pageNumber * pageSize; // Offset for pagination

        String sql = "SELECT id, info FROM levels WHERE info LIKE ? LIMIT ? OFFSET ?";
        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setString(1, "%" + searchQuery + "%");
            ps.setInt(2, pageSize);
            ps.setInt(3, offset);

            try (ResultSet rs = ps.executeQuery()) {
                DefaultTableModel model = (DefaultTableModel) tableLevels.getModel();
                model.setRowCount(0);  // Clear the table

                int no = offset + 1;
                while (rs.next()) {
                    model.addRow(new Object[]{
                        no++, // Row number
                        rs.getString("info"),
                        rs.getInt("id")
                    });
                }
            }

            // Calculate total pages
            calculateTotalPages(searchQuery);
            updatePageNumbers();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error loading levels: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void calculateTotalPages(String searchQuery) {
        String countSql = "SELECT COUNT(*) FROM levels WHERE info LIKE ?";
        try (PreparedStatement ps = conn.prepareStatement(countSql)) {
            ps.setString(1, "%" + searchQuery + "%");

            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    int totalItems = rs.getInt(1);
                    totalPages = (int) Math.ceil((double) totalItems / pageSize);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error calculating total pages: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void updatePageNumbers() {
        pageButtonsPanel.removeAll();
        int maxButtonsToShow = 2;
        int buttonsShown = 0;  // Counter for buttons displayed

        for (int i = 0; i < totalPages; i++) {
            // Show first page or within the maxButtonsToShow limit around current page
            if (i == 0 || (i >= currentPage && buttonsShown < maxButtonsToShow)) {
                JButton pageButton = new JButton(String.valueOf(i + 1));
                pageButton.setBackground(new Color(102, 102, 102));
                pageButton.setForeground(Color.WHITE);
                pageButton.setPreferredSize(new Dimension(50, 29));

                if (i == currentPage) {
                    pageButton.setEnabled(false);
                    pageButton.setBackground(new Color(128, 128, 128));
                }

                pageButton.addActionListener(e -> {
                    currentPage = Integer.parseInt(pageButton.getText()) - 1;
                    fetchLevels(txtSearch.getText().trim(), currentPage);
                    updatePageNumbers();
                });
                pageButtonsPanel.add(pageButton);

                if (i >= currentPage) {
                    buttonsShown++;
                }
            } // Add ellipsis after first page if there's a gap
            else if (i == 1 && currentPage > 1) {
                JLabel ellipsisLabel = new JLabel("...");
                ellipsisLabel.setPreferredSize(new Dimension(30, 29));
                ellipsisLabel.setHorizontalAlignment(SwingConstants.CENTER);
                pageButtonsPanel.add(ellipsisLabel);
                i = currentPage - 1; // Skip to current page
            } // Add ellipsis and last page if there are more pages
            else if (buttonsShown == maxButtonsToShow && i < totalPages - 1) {
                JLabel ellipsisLabel = new JLabel("...");
                ellipsisLabel.setPreferredSize(new Dimension(30, 29));
                ellipsisLabel.setHorizontalAlignment(SwingConstants.CENTER);
                pageButtonsPanel.add(ellipsisLabel);

                // Add last page button
                JButton lastPageButton = new JButton(String.valueOf(totalPages));
                lastPageButton.setBackground(new Color(102, 102, 102));
                lastPageButton.setForeground(Color.WHITE);
                lastPageButton.setPreferredSize(new Dimension(50, 29));
                lastPageButton.addActionListener(e -> {
                    currentPage = totalPages - 1;
                    fetchLevels(txtSearch.getText().trim(), currentPage);
                    updatePageNumbers();
                });
                pageButtonsPanel.add(lastPageButton);

                break; // Exit the loop since we've shown all needed buttons
            }
        }

        updatePrevNextButtons();

        pageButtonsPanel.setLayout(new FlowLayout());
        pageButtonsPanel.revalidate();
        pageButtonsPanel.repaint();
    }

    private int getSelectedLevelId() {
        int selectedRow = tableLevels.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a level first.", "No Selection", JOptionPane.WARNING_MESSAGE);
            return -1; // No row selected
        }

        // Get the table model
        DefaultTableModel model = (DefaultTableModel) tableLevels.getModel();

        // Ensure there are enough columns (you expect at least 3 columns: No, Name, ID)
        if (model.getColumnCount() > 2) {
            // Access the ID column (index 2)
            Object levelIdObject = model.getValueAt(selectedRow, 2);
            if (levelIdObject instanceof Integer) {
                return (int) levelIdObject; // Return the category ID
            } else {
                JOptionPane.showMessageDialog(this, "Invalid level ID format.", "Error", JOptionPane.ERROR_MESSAGE);
                return -1;
            }
        } else {
            // Debugging: Show a message if the column count is not sufficient
            System.out.println("Table doesn't have enough columns for ID.");
            JOptionPane.showMessageDialog(this, "Table doesn't have enough columns for ID.", "Error", JOptionPane.ERROR_MESSAGE);
            return -1;
        } // Default invalid ID
    }

    private void deleteLevel(int id, String searchQuery) {
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this level?", "Confirm Delete", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        if (confirm == JOptionPane.YES_OPTION) {
            try (PreparedStatement ps = conn.prepareStatement("DELETE FROM levels WHERE id = ?")) {
                ps.setInt(1, id);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Level deleted successfully!");
                int pageNumber = 0; // Set the current page (0 for the first page)
                fetchLevels(searchQuery, pageNumber);
                updatePrevNextButtons();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Error deleting level: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void editLevel(int id, String levelName, String searchQuery) {
        // Create a JPanel for the custom dialog
        JPanel panel = new JPanel(new GridLayout(2, 1));
        JLabel lblLevelName = new JLabel("Edit Level Name:");
        JTextField txtLevelName = new JTextField(levelName);
        panel.add(lblLevelName);
        panel.add(txtLevelName);

        // Show the custom dialog without any icon
        int option = JOptionPane.showConfirmDialog(this, panel, "Edit Level", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

        if (option == JOptionPane.OK_OPTION) {
            String newLevelName = txtLevelName.getText().trim();
            if (!newLevelName.isEmpty()) {
                try (PreparedStatement ps = conn.prepareStatement("UPDATE levels SET info = ? WHERE id = ?")) {
                    ps.setString(1, newLevelName);
                    ps.setInt(2, id);
                    ps.executeUpdate();
                    JOptionPane.showMessageDialog(this, "Level updated successfully!");
                    int pageNumber = 0; // Set the current page (0 for the first page)
                    fetchLevels(searchQuery, pageNumber);  // Refresh table
                    updatePrevNextButtons();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error updating level: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Level name cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    private void customizeTable() {
        // Set font for the table's cells
        Font tableFont = new Font("Arial", Font.PLAIN, 16);  // Change the font size as needed
        tableLevels.setFont(tableFont);  // Apply to the table cells

        // Set font for the table's header
        JTableHeader tableHeader = tableLevels.getTableHeader();
        tableHeader.setFont(new Font("Arial", Font.BOLD, 18));  // Set a bigger font for the header

        // Adjust the row height to fit the larger font size
        tableLevels.setRowHeight(30);  // Set a larger row height if needed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLevel;
    private javax.swing.JLabel btnCategories;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JLabel btnHome;
    private javax.swing.JLabel btnLevels;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrev;
    private javax.swing.JLabel btnProducts;
    private javax.swing.JLabel btnTransactions;
    private javax.swing.JLabel btnUnits;
    private javax.swing.JLabel btnUsers;
    private javax.swing.JLabel iconCategories;
    private javax.swing.JLabel iconHome;
    private javax.swing.JLabel iconLevels;
    private javax.swing.JLabel iconProducts;
    private javax.swing.JLabel iconTransactions;
    private javax.swing.JLabel iconUnits;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelUnits;
    private javax.swing.JPanel pageButtonsPanel;
    private javax.swing.JTable tableLevels;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JLabel txtSession;
    // End of variables declaration//GEN-END:variables
}
