/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views.admin;

import Config.UserSession;
import Config.constant;
import com.mysql.cj.xdevapi.Statement;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTickUnit;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;
import views.Login;

/**
 *
 * @author FryenX
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    public AdminDashboard() {
        initComponents();
        Icon();
        try {
            txtSession.setText(UserSession.getName());
            countNewTransactions();
            countMonthlyProfit();
            countUsers();
            countProducts();
            transactionsChart(selectedYear);

            populateYearComboBox();
            comboYear.setSelectedItem(String.valueOf(selectedYear));
            comboYear.addActionListener(e -> onYearChanged(e));
        } catch (SQLException ex) {
            Logger.getLogger(AdminDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void Icon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/image/icon.png")));
    }
    private final Connection conn = (Connection) constant.connect();
    private int selectedYear = Calendar.getInstance().get(Calendar.YEAR);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnTransactionsMenu = new javax.swing.JPanel();
        txtOrders = new javax.swing.JLabel();
        labelOrders = new javax.swing.JLabel();
        navOrders = new javax.swing.JPanel();
        btnNavOrders = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnProfitMenu = new javax.swing.JPanel();
        txtProfit = new javax.swing.JLabel();
        labelProfit = new javax.swing.JLabel();
        navOrders1 = new javax.swing.JPanel();
        btnNavOrders1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtUsers = new javax.swing.JLabel();
        labelProfit1 = new javax.swing.JLabel();
        navOrders2 = new javax.swing.JPanel();
        btnNavOrders2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        txtProducts = new javax.swing.JLabel();
        labelProfit2 = new javax.swing.JLabel();
        navOrders3 = new javax.swing.JPanel();
        btnNavOrders3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnTransactions = new javax.swing.JLabel();
        btnHome = new javax.swing.JLabel();
        iconHome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btnUsers = new javax.swing.JLabel();
        btnCategories = new javax.swing.JLabel();
        btnUnits = new javax.swing.JLabel();
        btnProducts = new javax.swing.JLabel();
        btnLevels = new javax.swing.JLabel();
        iconCategories = new javax.swing.JLabel();
        iconUnits = new javax.swing.JLabel();
        iconProducts = new javax.swing.JLabel();
        iconLevels = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        iconTransactions = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtSession = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        transactionCharts = new javax.swing.JPanel();
        comboYear = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnTransactionsMenu.setBackground(new java.awt.Color(0, 153, 255));
        btnTransactionsMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnTransactionsMenu.setPreferredSize(new java.awt.Dimension(197, 117));

        txtOrders.setFont(new java.awt.Font("Poppins Black", 1, 36)); // NOI18N
        txtOrders.setForeground(new java.awt.Color(255, 255, 255));
        txtOrders.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtOrders.setText("0");
        txtOrders.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        labelOrders.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        labelOrders.setForeground(new java.awt.Color(255, 255, 255));
        labelOrders.setText("New Orders");

        navOrders.setBackground(new java.awt.Color(0, 102, 153));
        navOrders.setToolTipText("");

        btnNavOrders.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnNavOrders.setForeground(new java.awt.Color(255, 255, 255));
        btnNavOrders.setText("More Info");

        javax.swing.GroupLayout navOrdersLayout = new javax.swing.GroupLayout(navOrders);
        navOrders.setLayout(navOrdersLayout);
        navOrdersLayout.setHorizontalGroup(
            navOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navOrdersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavOrders)
                .addGap(74, 74, 74))
        );
        navOrdersLayout.setVerticalGroup(
            navOrdersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navOrdersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Icon/bag.png"))); // NOI18N

        javax.swing.GroupLayout btnTransactionsMenuLayout = new javax.swing.GroupLayout(btnTransactionsMenu);
        btnTransactionsMenu.setLayout(btnTransactionsMenuLayout);
        btnTransactionsMenuLayout.setHorizontalGroup(
            btnTransactionsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnTransactionsMenuLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(btnTransactionsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelOrders)
                    .addComponent(txtOrders))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addContainerGap())
            .addComponent(navOrders, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        btnTransactionsMenuLayout.setVerticalGroup(
            btnTransactionsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnTransactionsMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(btnTransactionsMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnTransactionsMenuLayout.createSequentialGroup()
                        .addComponent(txtOrders, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelOrders))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(navOrders, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        btnProfitMenu.setBackground(new java.awt.Color(51, 204, 0));
        btnProfitMenu.setForeground(new java.awt.Color(255, 255, 255));
        btnProfitMenu.setMaximumSize(new java.awt.Dimension(100000000, 100000000));
        btnProfitMenu.setMinimumSize(new java.awt.Dimension(225, 129));

        txtProfit.setFont(new java.awt.Font("Poppins Black", 1, 18)); // NOI18N
        txtProfit.setForeground(new java.awt.Color(255, 255, 255));
        txtProfit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtProfit.setText("0");
        txtProfit.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        labelProfit.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        labelProfit.setForeground(new java.awt.Color(255, 255, 255));
        labelProfit.setText("Monthly Profits");

        navOrders1.setBackground(new java.awt.Color(51, 153, 0));
        navOrders1.setToolTipText("");

        btnNavOrders1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnNavOrders1.setForeground(new java.awt.Color(255, 255, 255));
        btnNavOrders1.setText("More Info");

        javax.swing.GroupLayout navOrders1Layout = new javax.swing.GroupLayout(navOrders1);
        navOrders1.setLayout(navOrders1Layout);
        navOrders1Layout.setHorizontalGroup(
            navOrders1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navOrders1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavOrders1)
                .addGap(98, 98, 98))
        );
        navOrders1Layout.setVerticalGroup(
            navOrders1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navOrders1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNavOrders1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Icon/stats-bars.png"))); // NOI18N

        javax.swing.GroupLayout btnProfitMenuLayout = new javax.swing.GroupLayout(btnProfitMenu);
        btnProfitMenu.setLayout(btnProfitMenuLayout);
        btnProfitMenuLayout.setHorizontalGroup(
            btnProfitMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnProfitMenuLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(btnProfitMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProfit)
                    .addComponent(labelProfit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(navOrders1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        btnProfitMenuLayout.setVerticalGroup(
            btnProfitMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnProfitMenuLayout.createSequentialGroup()
                .addGroup(btnProfitMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(btnProfitMenuLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtProfit, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelProfit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnProfitMenuLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(navOrders1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBackground(new java.awt.Color(204, 204, 0));
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));

        txtUsers.setFont(new java.awt.Font("Poppins Black", 1, 36)); // NOI18N
        txtUsers.setForeground(new java.awt.Color(255, 255, 255));
        txtUsers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtUsers.setText("0");
        txtUsers.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        labelProfit1.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        labelProfit1.setForeground(new java.awt.Color(255, 255, 255));
        labelProfit1.setText("Users");

        navOrders2.setBackground(new java.awt.Color(153, 153, 0));
        navOrders2.setToolTipText("");

        btnNavOrders2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnNavOrders2.setForeground(new java.awt.Color(255, 255, 255));
        btnNavOrders2.setText("More Info");

        javax.swing.GroupLayout navOrders2Layout = new javax.swing.GroupLayout(navOrders2);
        navOrders2.setLayout(navOrders2Layout);
        navOrders2Layout.setHorizontalGroup(
            navOrders2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navOrders2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavOrders2)
                .addGap(87, 87, 87))
        );
        navOrders2Layout.setVerticalGroup(
            navOrders2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navOrders2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNavOrders2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Icon/person-stalker.png"))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelProfit1)
                    .addComponent(txtUsers))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(14, 14, 14))
            .addComponent(navOrders2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(txtUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelProfit1))
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addComponent(navOrders2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6.setBackground(new java.awt.Color(204, 0, 0));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(197, 0));

        txtProducts.setFont(new java.awt.Font("Poppins Black", 1, 36)); // NOI18N
        txtProducts.setForeground(new java.awt.Color(255, 255, 255));
        txtProducts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtProducts.setText("0");
        txtProducts.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        labelProfit2.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        labelProfit2.setForeground(new java.awt.Color(255, 255, 255));
        labelProfit2.setText("Products");

        navOrders3.setBackground(new java.awt.Color(153, 0, 0));
        navOrders3.setToolTipText("");

        btnNavOrders3.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        btnNavOrders3.setForeground(new java.awt.Color(255, 255, 255));
        btnNavOrders3.setText("More Info");

        javax.swing.GroupLayout navOrders3Layout = new javax.swing.GroupLayout(navOrders3);
        navOrders3.setLayout(navOrders3Layout);
        navOrders3Layout.setHorizontalGroup(
            navOrders3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navOrders3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavOrders3)
                .addGap(88, 88, 88))
        );
        navOrders3Layout.setVerticalGroup(
            navOrders3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, navOrders3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNavOrders3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Icon/pricetags.png"))); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(navOrders3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtProducts)
                    .addComponent(labelProfit2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(14, 14, 14))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(txtProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelProfit2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(navOrders3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        btnTransactions.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnTransactions.setForeground(new java.awt.Color(255, 255, 255));
        btnTransactions.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnTransactions.setText("Transactions");
        btnTransactions.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTransactionsMouseClicked(evt);
            }
        });

        btnHome.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnHome.setText("Home");
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });

        iconHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/chart-simple-solid.png"))); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/users-solid.png"))); // NOI18N

        btnUsers.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnUsers.setForeground(new java.awt.Color(255, 255, 255));
        btnUsers.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnUsers.setText("Users");
        btnUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUsersMouseClicked(evt);
            }
        });

        btnCategories.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnCategories.setForeground(new java.awt.Color(255, 255, 255));
        btnCategories.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCategories.setText("Categories");
        btnCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCategoriesMouseClicked(evt);
            }
        });

        btnUnits.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnUnits.setForeground(new java.awt.Color(255, 255, 255));
        btnUnits.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnUnits.setText("Units");
        btnUnits.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUnitsMouseClicked(evt);
            }
        });

        btnProducts.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnProducts.setForeground(new java.awt.Color(255, 255, 255));
        btnProducts.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProducts.setText("Products");
        btnProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProductsMouseClicked(evt);
            }
        });

        btnLevels.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        btnLevels.setForeground(new java.awt.Color(255, 255, 255));
        btnLevels.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLevels.setText("Levels");
        btnLevels.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLevelsMouseClicked(evt);
            }
        });

        iconCategories.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/list-solid.png"))); // NOI18N

        iconUnits.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/list-solid.png"))); // NOI18N

        iconProducts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/table-solid.png"))); // NOI18N

        iconLevels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/share-solid.png"))); // NOI18N

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N

        iconTransactions.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Menu/table-solid.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setMinimumSize(new java.awt.Dimension(194, 40));

        txtSession.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtSession.setText("NAME");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(txtSession)
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSession)
                .addContainerGap())
        );

        btnLogout.setBackground(new java.awt.Color(255, 0, 0));
        btnLogout.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        btnLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnLogout.setText("LOGOUT");
        btnLogout.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(iconCategories)
                            .addComponent(iconUnits)
                            .addComponent(iconLevels)
                            .addComponent(iconProducts))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCategories)
                            .addComponent(btnUsers)
                            .addComponent(btnUnits)
                            .addComponent(btnProducts)
                            .addComponent(btnLevels)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(iconHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnHome))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(iconTransactions)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTransactions, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(61, 61, 61))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(iconHome)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUsers)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCategories)
                    .addComponent(iconCategories))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUnits)
                    .addComponent(iconUnits))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnProducts)
                    .addComponent(iconProducts))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLevels)
                    .addComponent(iconLevels))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTransactions)
                    .addComponent(iconTransactions))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        transactionCharts.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout transactionChartsLayout = new javax.swing.GroupLayout(transactionCharts);
        transactionCharts.setLayout(transactionChartsLayout);
        transactionChartsLayout.setHorizontalGroup(
            transactionChartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        transactionChartsLayout.setVerticalGroup(
            transactionChartsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnTransactionsMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProfitMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(transactionCharts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnProfitMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTransactionsMenu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionCharts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnLevelsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLevelsMouseClicked
        ManageLevels manageLevels = new ManageLevels(); // Instantiate the Input class
        manageLevels.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnLevelsMouseClicked

    private void btnProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProductsMouseClicked
        ManageProducts manageProducts = new ManageProducts(); // Instantiate the Input class
        manageProducts.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnProductsMouseClicked

    private void btnUnitsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUnitsMouseClicked
        ManageUnits manageUnits = new ManageUnits(); // Instantiate the Input class
        manageUnits.setVisible(true);    // Show the Input window
        this.dispose(); // TODO add your handling code here:
    }//GEN-LAST:event_btnUnitsMouseClicked

    private void btnCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCategoriesMouseClicked
        ManageCategories manageCategories = new ManageCategories(); // Instantiate the Input class
        manageCategories.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnCategoriesMouseClicked

    private void btnUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUsersMouseClicked
        ManageUsers manageUser = new ManageUsers(); // Instantiate the Input class
        manageUser.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnUsersMouseClicked

    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        AdminDashboard adminDashboard = new AdminDashboard(); // Instantiate the Input class
        adminDashboard.setVisible(true);    // Show the Input window
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_btnHomeMouseClicked

    private void btnTransactionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTransactionsMouseClicked
        Transactions transactions = new Transactions(); // Instantiate the Input class
        transactions.setVisible(true);    // Show the Input window
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTransactionsMouseClicked

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        UserSession.clearSession();

        Login login = new Login();
        login.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
            }
        });
    }

    private void countNewTransactions() throws SQLException {
        LocalDateTime now = LocalDateTime.now();
        int currentYear = now.getYear();
        int currentMonth = now.getMonthValue();
        String monthFormatted = String.format("%02d", currentMonth);
        String sql = "SELECT COUNT(invoice) AS sumTransactions FROM transactions WHERE strftime('%Y', date_time) = TRIM(?) AND strftime('%m', date_time) = TRIM(?)";

        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setInt(1, currentYear);  // Set the current year
            ps.setString(2, monthFormatted);  // Set the current month
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    int transactions = rs.getInt("sumTransactions");  // Get the count as an integer
                    txtOrders.setText(String.valueOf(transactions));  // Set the result in the text field
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error loading transactions: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void countMonthlyProfit() throws SQLException {
        LocalDateTime now = LocalDateTime.now();
        int currentYear = now.getYear();
        int currentMonth = now.getMonthValue(); // Month as an integer (1-12)
        String monthFormatted = String.format("%02d", currentMonth);
        String sql = "SELECT SUM(transactions.net_total - (transactions_detail.purchase_price * transactions_detail.qty)) AS profit FROM transactions_detail "
                + "JOIN transactions ON transactions_detail.invoice = transactions.invoice WHERE strftime('%Y' ,date_time) = TRIM(?) AND strftime('%m' ,date_time) = TRIM(?)";

        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            ps.setInt(1, currentYear);  // Set the current year
            ps.setString(2, monthFormatted);  // Set the current month
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    double profit = rs.getInt("profit");  // Get the count as an integer
                    CurrencyFilter currencyFilter = new CurrencyFilter();
                    String formattedProfit = currencyFilter.currencyFormat.format(profit);
                    // Set the formatted profit in the text field
                    txtProfit.setText(formattedProfit);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error loading transactions: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void countUsers() throws SQLException {

        String sql = "SELECT COUNT(name) AS users FROM users";

        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    int users = rs.getInt("users");  // Get the count as an integer
                    txtUsers.setText(String.valueOf(users));  // Set the result in the text field
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error loading transactions: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void countProducts() throws SQLException {

        String sql = "SELECT COUNT(barcode) AS products FROM products";

        try (PreparedStatement ps = conn.prepareStatement(sql)) {
            try (ResultSet rs = ps.executeQuery()) {
                if (rs.next()) {
                    int users = rs.getInt("products");  // Get the count as an integer
                    txtProducts.setText(String.valueOf(users));  // Set the result in the text field
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error loading transactions: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void transactionsChart(int YearNow) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // SQL query to fetch transaction count per month
        String query = "SELECT strftime('%Y', date_time) AS year, strftime('%m' ,date_time) AS month, COUNT(invoice) AS transaction_count "
                + "FROM transactions "
                + "WHERE strftime('%Y', date_time) = TRIM(?) "
                + "GROUP BY strftime('%Y', date_time), strftime('%m', date_time) "
                + "ORDER BY year, month";

        int firstMonth = 1;
        int lastMonth = 12;

        // Month names array for display
        String[] monthNames = {
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        };

        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, YearNow);  // Set the selected year dynamically
            ResultSet rs = stmt.executeQuery();
            // Populate dataset with actual data from the database
            while (rs.next()) {
                int year = rs.getInt("year");
                int month = rs.getInt("month");
                int count = rs.getInt("transaction_count");

                // Get the month name from the array
                String monthName = monthNames[month - 1];  // Array is 0-indexed, so subtract 1

                // Format month as "Month-Year"
                String monthYear = String.format("%s-%d", monthName, year);

                // Add the data to the dataset
                dataset.addValue(count, "Transactions", monthYear);
            }

            // Ensure that all months (1 to 12) are represented even if there are no transactions in some months
            for (int month = firstMonth; month <= lastMonth; month++) {
                String monthName = monthNames[month - 1];  // Get month name
                String monthYear = String.format("%s-2025", monthName);  // Assuming year 2025
                if (!dataset.getColumnKeys().contains(monthYear)) {
                    dataset.addValue(0, "Transactions", monthYear);  // Add month with 0 transactions if no data exists
                }
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Create the bar chart instead of line chart
        JFreeChart chart = ChartFactory.createBarChart(
                "Transaction History", // Chart title
                "Month", // X-axis label
                "Number of Transactions", // Y-axis label
                dataset, // Dataset
                PlotOrientation.VERTICAL, // Plot orientation
                true, // Include legend
                true, // Include tooltips
                false // Include URLs
        );

        // Customize the chart appearance
        CategoryPlot plot = (CategoryPlot) chart.getPlot();
        plot.setBackgroundPaint(Color.WHITE);
        plot.setRangeGridlinePaint(Color.GRAY);
        plot.setDomainGridlinePaint(Color.GRAY);

        // Customize the range (Y-axis) to show integers
        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits()); // Use integer ticks
        rangeAxis.setAutoRangeMinimumSize(1.0); // Ensure range starts with a meaningful value
        rangeAxis.setTickUnit(new NumberTickUnit(1)); // Increment ticks by 1
        rangeAxis.setLabelFont(new Font("Arial", Font.PLAIN, 12)); // Customize font for the Y-axis label
        rangeAxis.setTickLabelFont(new Font("Arial", Font.PLAIN, 10)); // Customize font for the Y-axis tick labels

        // Customize bar appearance
        BarRenderer renderer = (BarRenderer) plot.getRenderer();
        renderer.setSeriesPaint(0, new Color(0, 123, 255)); // Blue bars

        // Customize the Category Axis (X-axis) for better visibility of month names
        CategoryAxis domainAxis = plot.getDomainAxis();
        domainAxis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);  // Rotate the labels at 45 degrees for readability
        domainAxis.setLabelFont(new Font("Arial", Font.PLAIN, 12)); // Set label font size
        domainAxis.setTickLabelFont(new Font("Arial", Font.PLAIN, 10)); // Set tick label font sizee

        // Create chart panel
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(new Dimension(800, 400));

        // Add to your panel
        transactionCharts.removeAll();
        transactionCharts.setLayout(new BorderLayout());
        transactionCharts.add(chartPanel, BorderLayout.CENTER);
        transactionCharts.revalidate();
    }

    static class CurrencyFilter extends DocumentFilter {

        private final DecimalFormat currencyFormat;

        public CurrencyFilter() {
            // Create a DecimalFormat for IDR
            currencyFormat = (DecimalFormat) NumberFormat.getCurrencyInstance(new Locale("id", "ID"));
            currencyFormat.setMaximumFractionDigits(0); // No decimal places for IDR
            currencyFormat.setGroupingUsed(true); // Use grouping separators
            currencyFormat.setPositivePrefix("Rp ");
        }

        @Override
        public void insertString(DocumentFilter.FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
            if (string == null) {
                return;
            }
            String currentText = fb.getDocument().getText(0, fb.getDocument().getLength());
            String newText = currentText.substring(0, offset) + string + currentText.substring(offset);
            updateText(fb, newText);
        }

        @Override
        public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String string, AttributeSet attrs) throws BadLocationException {
            String currentText = fb.getDocument().getText(0, fb.getDocument().getLength());
            String newText = currentText.substring(0, offset) + string + currentText.substring(offset + length);
            updateText(fb, newText);
        }

        @Override
        public void remove(DocumentFilter.FilterBypass fb, int offset, int length) throws BadLocationException {
            String currentText = fb.getDocument().getText(0, fb.getDocument().getLength());
            String newText = currentText.substring(0, offset) + currentText.substring(offset + length);
            updateText(fb, newText);
        }

        private void updateText(DocumentFilter.FilterBypass fb, String text) throws BadLocationException {
            // Check for the negative sign and retain it
            boolean isNegative = text.startsWith("-");

            // Remove non-digit characters except for the minus sign
            String numericText = text.replaceAll("[^\\d-]", "");
            if (numericText.isEmpty()) {
                numericText = "0";
            }

            // If the number is negative, parse it as a negative value
            long parsedValue = Long.parseLong(numericText.replace("-", ""));
            String formattedText = currencyFormat.format(parsedValue);

            // If it's negative, add the negative sign back in the formatted text
            if (isNegative) {
                formattedText = "-" + formattedText;
            }

            fb.replace(0, fb.getDocument().getLength(), formattedText, null);
        }
    }

    private void populateYearComboBox() {
        comboYear.removeAllItems();
        int currentYear = Calendar.getInstance().get(Calendar.YEAR);
        for (int i = currentYear - 5; i <= currentYear + 5; i++) {
            comboYear.addItem(String.valueOf(i)); // Add years as Strings
        }
    }

    private void onYearChanged(ActionEvent event) {
        updateSelectedDate();
    }

    private void updateSelectedDate() {
        try {
            if (comboYear.getSelectedItem() != null) {
                selectedYear = Integer.parseInt((String) comboYear.getSelectedItem());
                transactionsChart(selectedYear);
            }
        } catch (NumberFormatException e) {
            System.out.println("Error parsing numbers"); // Debug print
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnCategories;
    private javax.swing.JLabel btnHome;
    private javax.swing.JLabel btnLevels;
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel btnNavOrders;
    private javax.swing.JLabel btnNavOrders1;
    private javax.swing.JLabel btnNavOrders2;
    private javax.swing.JLabel btnNavOrders3;
    private javax.swing.JLabel btnProducts;
    private javax.swing.JPanel btnProfitMenu;
    private javax.swing.JLabel btnTransactions;
    private javax.swing.JPanel btnTransactionsMenu;
    private javax.swing.JLabel btnUnits;
    private javax.swing.JLabel btnUsers;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JLabel iconCategories;
    private javax.swing.JLabel iconHome;
    private javax.swing.JLabel iconLevels;
    private javax.swing.JLabel iconProducts;
    private javax.swing.JLabel iconTransactions;
    private javax.swing.JLabel iconUnits;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel labelOrders;
    private javax.swing.JLabel labelProfit;
    private javax.swing.JLabel labelProfit1;
    private javax.swing.JLabel labelProfit2;
    private javax.swing.JPanel navOrders;
    private javax.swing.JPanel navOrders1;
    private javax.swing.JPanel navOrders2;
    private javax.swing.JPanel navOrders3;
    private javax.swing.JPanel transactionCharts;
    private javax.swing.JLabel txtOrders;
    private javax.swing.JLabel txtProducts;
    private javax.swing.JLabel txtProfit;
    private javax.swing.JLabel txtSession;
    private javax.swing.JLabel txtUsers;
    // End of variables declaration//GEN-END:variables
}
